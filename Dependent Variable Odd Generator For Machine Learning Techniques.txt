//@version=4
// MIT License

//Copyright (c) 2019 user-Noldo

//Permission is hereby granted, free of charge, to any person obtaining a copy
//of this software and associated documentation files (the "Software"), to deal
//in the Software without restriction, including without limitation the rights
//to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//copies of the Software, and to permit persons to whom the Software is
//furnished to do so, subject to the following conditions:

//The above copyright notice and this permission notice shall be included in all
//copies or substantial portions of the Software.

//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//SOFTWARE.



study("Dependent Variable Odd Generator For Machine Learning Techniques")

src = close 


// MONEY FLOW INDEX (MFI)

// Money Flow Index Period

t_mfi   = 14


// Essential Functions 

f_sum(_src , _length) => 

    _output  = 0.00 
    
    _length_adjusted = _length < 1 ? 1 : _length
    
    for i = 0 to _length_adjusted-1
        _output := _output + _src[i]


// MONEY FLOW INDEX =====> FOR BULL OR BEAR MARKET (CLOSE)


upper_s = f_sum(volume * (change(src) <= 0 ? 0 : src), t_mfi)
lower_s = f_sum(volume * (change(src) >= 0 ? 0 : src), t_mfi)

_market_index = rsi(upper_s, lower_s)


// BOLLINGER BANDS ======> FOR TREND OR RANGE MARKET (Now we must find Bollinger Band Width)

t_bb = 20

Multiplier = 2


e = ema(src,t_bb)

std = stdev(src , t_bb )


upband = e + (Multiplier * std)
dnband = e - (Multiplier * std)
basis  = e


// Bollinger Band Width (BBW)


_bbw    = (upband - dnband) / basis


// Bollinger Band Width Money Flow Index (BBW MFI)

t_bbwmfi = 14

// BBW MFI

upper_sbbw = f_sum(volume * (change(_bbw) <= 0 ? 0 : _bbw), t_bbwmfi)
lower_sbbw = f_sum(volume * (change(_bbw) >= 0 ? 0 : _bbw), t_bbwmfi)


_bbwmf = rsi(upper_sbbw, lower_sbbw)


/// ***** DEFINITION : ODDS *****

// Bollinger Band Width Odds

// Conditions 

_bbw_stagnant = ( 100 - _bbwmf )

_stagnant_factor = 1 + (( 100 - _bbwmf ) / 100 )

_trend_factor    = 1 + (( _bbwmf ) / 100 )

// Price Odds

// Conditions  

_bull_gross  = (_market_index )
_bear_gross  = (100 - _market_index )

_price_stagnant = (_bull_gross * _bear_gross ) / 100


_price_bull  = (_bull_gross - _price_stagnant)

_price_bear  = (_bear_gross - _price_stagnant)


// Market Types with BBW Trend Factor

_stagnant =  _price_stagnant * _stagnant_factor        // Pure Stagnant

_bull     =  _price_bull     * _trend_factor           // Pure Bull

_bear     =  _price_bear     * _trend_factor           // Pure Bear


// Now we ll do venn scheme (Probability Cluster)
// Pure Bull + Pure Bear + Pure Stagnant = 100 
// Markets will get their share in the Probability Cluster 

 
_coeff = (_stagnant + _bull + _bear) / 100


_odd_bull     = _bull / _coeff
_odd_bear     = _bear / _coeff
_odd_stagnant = _stagnant / _coeff


// Plot data

plot(_odd_bull     , color=color.green , transp = 0)
plot(_odd_bear     , color=color.red   , transp = 0)
plot(_odd_stagnant , color=color.blue  , transp = 0)


